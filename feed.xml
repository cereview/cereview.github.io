<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-02-16T14:52:42+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">amitabh yadav</title><subtitle>It&apos;s not right but the thing is, it&apos;s not even wrong!</subtitle><author><name>Amitabh Yadav</name></author><entry><title type="html">An outlook on Agile Hardware Development Methodology for accelerating full-stack development of Deep Learning SoCs</title><link href="http://localhost:4000/posts/2023/agile-hardware-and-software-for-soc/" rel="alternate" type="text/html" title="An outlook on Agile Hardware Development Methodology for accelerating full-stack development of Deep Learning SoCs" /><published>2023-02-03T00:00:00+01:00</published><updated>2023-02-03T00:00:00+01:00</updated><id>http://localhost:4000/posts/2023/agile-hardware-software-for-soc</id><content type="html" xml:base="http://localhost:4000/posts/2023/agile-hardware-and-software-for-soc/"><![CDATA[<h4 id="1-future-computing-systems-where-are-we-heading-post-moore-era-hooker-2018-horowitz-2014">1. Future Computing Systems: Where are we heading post-Moore era? [Hooker 2018, Horowitz 2014]</h4>

<p>In the post Moore’s Law era, parallelism isn’t going to be the boat for us to set sail for the next generation of computing systems; power is going to be the principal factor dictating the research direction for heterogeneous accelerators. The architectural challenge is to maintain a balance between performance and functional flexibility; and the key QoR metrics to report are computational capability (GOps) and power efficiency (GOps/W), overall computational effectiveness (precision) and full-stack integration. This is highlighted in the AI and ML accelerator trends (Figure 1).</p>

<p><img src="/assets/images/ai_accelerators_2022.png" alt="Figure 1: Peak performance vs peak power of publically announced accelerators in 2022" />
Figure 1: Peak performance vs peak power of publically announced accelerators in 2022 <a href="https://www.arxiv.org/abs/2210.04055">[arxiv:2210.04055]</a></p>

<p>In modern DNN accelerators, the architecture used to train a deep learning model affects the model’s accuracy, speed and even its ability to generalise to new data. This creates a massive multi-dimensional design space to find pareto-optimal configuration per use-case. Typically, a new reliable architecture design from ideation to tape-out takes three to four years by a team - which besides time, incurs a huge development cost (multi-Million $). This motivates us to explore an ASIC development methodology that should allow application experts to configure the lower layers of the computing stack to create these new efficient systems through high-level synthesis, and design reuse through rich parameterization and incremental extensions. This disparages the Waterfall model that has been adopted since the inception of integrated circuits to an Agile model for continuous development and integration for DNN accelerators.</p>

<p>In this short article, we discuss two of the Agile Hardware-Software Co-design Frameworks, namely, Agile Hardware (AHA) initiative at Stanford Accelerate Lab and Chipyard Framework developed at UC Berkeley’s ADEPT (Agile Design of Efficient Processing Technologies) Lab (now, SLICE lab), with emphasis on their respective accelerator architectures and implemented optimizations for accelerating deep neural networks. In section 2, we discuss in detail the Gemmini accelerator and in section 3 we dive into the details of Coarse-Grained Reconfigurable Array (CGRA). Finally, in section 4, we compare and contrast the two approaches, identify their strengths and weaknesses, and present our conclusions.</p>

<h4 id="2-chipyard-and-gemmini">2. Chipyard and Gemmini</h4>

<p>Chipyard + Gemmini are one of the more mature open-source frameworks for custom SoC-accelerator generators (aside from industry, e.g. ASIP designer) that adopts an agile approach. Chipyard is a complete suite for physically realisable SoC design, simulation, validation and full-stack integration to RISC-V and BOOM cores via RoCC port of TileLink to enable configurable generator-based accelerators (such as Gemmini) IP blocks that support rich parameterization and RISC-V ISA extensions. The number of tools are extensive and it would be unjust to briefly summarise. Figure below shows Chipyard workflow and Gemmini integration and attempts to share a glimpse.</p>

<p><img src="/assets/images/chipyard.png" alt="chipyard" /></p>

<p>Gemmini is a matrix multiplication accelerator containing:</p>

<ul>
  <li>2-tier organised Systolic array for flexible microarchitecture: pipelined tiles, containing PEs (not pipelined) for dot product and accumulation. This enables both systolic spatial array (TPU) and parallel vector engines (NVDLA).</li>
  <li>Connects to RocketCore/BOOM via RoCC; by default maps to L2 shared cache.</li>
  <li>Main memory connects host to Gemmini’s Scratchpad (SRAM) and Accumulator. DMA access keeps latency low.</li>
  <li>Scratchpad stores the inputs, and accumulator stores partial sums and final results.</li>
  <li>Computation happens in weight stationary or output stationary dataflow, which is configurable at run-time/hardened in silicon.
<img src="/assets/images/ow-stationary.png" alt="ow-stationary" /></li>
  <li>optionally peripheral circuitry for activation functions ReLU/ReLU6, result precision scaling by powers-of-2 for quantization, and pre-processing e.g. transpose matrix circuit before directing to the systolic array.</li>
  <li>ONNX/C for programming.</li>
  <li>Heuristic algorithms are used for data staging and mapping.</li>
</ul>

<p>Systolic Array configs:</p>

<ul>
  <li>Systolic array dimensions (tileRows, tileColumns, meshRows, meshColumns)</li>
  <li>Input Stationary/Weight Stationary (dataflow)</li>
  <li>Scratchpad/Accumulator capacity (in Kib) (sp_banks, sp_capacity, acc_capacity)</li>
  <li>Datatypes for I/O and partial accumulations (inputType, outputType, accType)</li>
  <li>Access-execute decoupling queue parameters (ld ,st, ex, rob)</li>
  <li>DMA parameters and scaling factor (optional).</li>
  <li>Custom RISC-V ISA extension support.</li>
</ul>

<p><img src="/assets/images/cnnhw.png" alt="cnn-hardware-impl" />
Or, can be achieved via GEMM.</p>

<p>Image processing data –&gt; im2col –&gt; Matrix Multiplication</p>

<p>(Needs convolution)    (preprocessing)   (Nested for loops)</p>

<p>Performance:</p>

<p><img src="/assets/images/nn-gemmini-perf.png" alt="performance-gemmini" /></p>

<p>Memory partitioning strategy, tiling and scheduling can greatly impact performance of workload.
Profiling access patterns in workloads can give better ideas in dataflow optimization.
Spatial and Temporal data-reuse can further impact performance.
Maximum area (67.1%) is still captured by SRAM on chip, followed by the rocket core and then the accelerator.</p>

<p>In conclusion, what makes Gemmini unique from other implementations is the manufacturability as a full SoC, Linux OS support and Virtual address translation support (along with shared memory access). Dataflow, Bitwidth, Input Dimensions, Bus Size, HOST CPU,Pipelines, Memory and memory banks all affect the performance. Gemmini enables exploration of a vast design space, profile system-level performance using Chipyard + FireMarshal infrastructure and uncover reliability issues that can occur across the stack.</p>

<h4 id="3-agile-hardware-aha-of-amber-soc-using-cgra">3. Agile Hardware (AHA) of Amber SoC using CGRA</h4>

<p>A Coarse Grain Reconfigurable Architecture (CGRA) is a reconfigurable architecture that operates on coarser granularity than traditional reconfigurable architectures such as FPGA (fine-grained). CGRA consists of an array of Processing Elements (PE) and memory (MEM) tiles connected via reconfigurable interconnect that are capable of executing word-level operations and can be reconfigured to minimise idling time through online partial reconfiguration (necessary of edge devices and servers running parallel applications within the fabric).</p>

<p><img src="/assets/images/aha-stanford.png" alt="aha-cgra" /></p>

<p>Each hardware block has its own DSL for PE (PEak), MEM (Lake) and Interconnect (Canal). This is compiled to generate the final RTL and routed to the VLSI flow to generate GDSII. The compilers map applications written in Halide to a CGRA bitstream. It receives updated specifications (rewrite rules, routing graph) from the DSL-based hardware generators, allowing it to compile to evolving CGRA hardware with no manual updates. The coupled accelerator compiler takes the rewrite rules generated by each DSL compiler to map applications to the hardware. Halide (DSL in C/C++) specified applications are mapped to CGRA (Figure 5).</p>

<p>Amber SoC is a 367 GOPS, 538 GOPS/W 16nm SoC designed with the AHA co-design approach for dense linear algebra applications (Figure 4).</p>
<ul>
  <li>Amber demonstrates 2x speed up compared to baseline FPGA by reduction in idle time through fast (3.5us) dynamic partial reconfiguration (DPR).
<img src="/assets/images/aha-perf.png" alt="aha-perf" /></li>
  <li>It intelligently handles data access to streaming memory without DMA access (to reduce power consumption) by leveraging the affine data access patterns (e.g. nested for loop) in dense linear algebra applications. This is done using Iteration Domain (range of memory identification), Address Generator (address calculation) and Schedule generator (read/write signals). No manual intervention is necessary as the application compiler handles this task.</li>
  <li>Wide fetch SRAM in streaming memory to reduce energy consumption (48%), and Resource sharing of ID/AD/SG to reduce area (50%).</li>
  <li>It chains together PEs to perform less frequent but necessary algebraic operations (FPdiv, log, sin etc) with very small area overhead (0.2%) and saves 37.8% area compared to on ship complex op circuitry.</li>
</ul>

<h4 id="4-conclusions">4. Conclusions</h4>

<ul>
  <li>The cost of verification and software maintainability (of both, existing and new codebase) would be the key to determine the way forwards in computing.
<img src="/assets/images/chip-design-cost.png" alt="chip-design-cost-breakdown" /></li>
  <li>Both face a similar challenge in developing efficient algorithms for mapping data/software programs onto the systolic arrays/CGRA. This can be difficult, especially for large and complex applications. In contrast to systolic arrays, CGRAs are flexible enough to adapt to different applications.</li>
  <li>Both, Systolic Arrays and CGRAs may not perform as well as specialised hardware for certain types of tasks. For example, a general-purpose processor may be faster for tasks that require a high level of sequential processing. In this sense, both are domain-specific architectures.</li>
  <li>In either case, a rigorous approach to system-level verification and validation is a challenge; for which formal methods, DSE tools and profiling tools would be necessary. Further, Physical design needs manual interventions, which can drastically impact performance. This can be mitigated by automated tests for DFM (Design for Manufacturability/Sign-Off).</li>
</ul>

<p>To conclude, the fragmented landscape of ASICs for computing are causing a barrier to new innovations from the software frontend. Standardising the practices for developing new ASICs or CGRAs is a direction in the right step. What can be improved here is to allow for more comfortable entry points to SOC practitioners to allow configuration and testing of these devices through a cloud based infrastructure to iteratively evolve and make the portability of the existing software to the hardware feasible.</p>

<p>Lastly, on a personal observation, the codebase of both needs a lot more comments. It’s a mess.</p>]]></content><author><name>Amitabh Yadav</name></author><category term="Digital Design and Simulation" /><summary type="html"><![CDATA[1. Future Computing Systems: Where are we heading post-Moore era? [Hooker 2018, Horowitz 2014] In the post Moore’s Law era, parallelism isn’t going to be the boat for us to set sail for the next generation of computing systems; power is going to be the principal factor dictating the research direction for heterogeneous accelerators. The architectural challenge is to maintain a balance between performance and functional flexibility; and the key QoR metrics to report are computational capability (GOps) and power efficiency (GOps/W), overall computational effectiveness (precision) and full-stack integration. This is highlighted in the AI and ML accelerator trends (Figure 1). Figure 1: Peak performance vs peak power of publically announced accelerators in 2022 [arxiv:2210.04055] In modern DNN accelerators, the architecture used to train a deep learning model affects the model’s accuracy, speed and even its ability to generalise to new data. This creates a massive multi-dimensional design space to find pareto-optimal configuration per use-case. Typically, a new reliable architecture design from ideation to tape-out takes three to four years by a team - which besides time, incurs a huge development cost (multi-Million $). This motivates us to explore an ASIC development methodology that should allow application experts to configure the lower layers of the computing stack to create these new efficient systems through high-level synthesis, and design reuse through rich parameterization and incremental extensions. This disparages the Waterfall model that has been adopted since the inception of integrated circuits to an Agile model for continuous development and integration for DNN accelerators. In this short article, we discuss two of the Agile Hardware-Software Co-design Frameworks, namely, Agile Hardware (AHA) initiative at Stanford Accelerate Lab and Chipyard Framework developed at UC Berkeley’s ADEPT (Agile Design of Efficient Processing Technologies) Lab (now, SLICE lab), with emphasis on their respective accelerator architectures and implemented optimizations for accelerating deep neural networks. In section 2, we discuss in detail the Gemmini accelerator and in section 3 we dive into the details of Coarse-Grained Reconfigurable Array (CGRA). Finally, in section 4, we compare and contrast the two approaches, identify their strengths and weaknesses, and present our conclusions. 2. Chipyard and Gemmini Chipyard + Gemmini are one of the more mature open-source frameworks for custom SoC-accelerator generators (aside from industry, e.g. ASIP designer) that adopts an agile approach. Chipyard is a complete suite for physically realisable SoC design, simulation, validation and full-stack integration to RISC-V and BOOM cores via RoCC port of TileLink to enable configurable generator-based accelerators (such as Gemmini) IP blocks that support rich parameterization and RISC-V ISA extensions. The number of tools are extensive and it would be unjust to briefly summarise. Figure below shows Chipyard workflow and Gemmini integration and attempts to share a glimpse. Gemmini is a matrix multiplication accelerator containing: 2-tier organised Systolic array for flexible microarchitecture: pipelined tiles, containing PEs (not pipelined) for dot product and accumulation. This enables both systolic spatial array (TPU) and parallel vector engines (NVDLA). Connects to RocketCore/BOOM via RoCC; by default maps to L2 shared cache. Main memory connects host to Gemmini’s Scratchpad (SRAM) and Accumulator. DMA access keeps latency low. Scratchpad stores the inputs, and accumulator stores partial sums and final results. Computation happens in weight stationary or output stationary dataflow, which is configurable at run-time/hardened in silicon. optionally peripheral circuitry for activation functions ReLU/ReLU6, result precision scaling by powers-of-2 for quantization, and pre-processing e.g. transpose matrix circuit before directing to the systolic array. ONNX/C for programming. Heuristic algorithms are used for data staging and mapping. Systolic Array configs: Systolic array dimensions (tileRows, tileColumns, meshRows, meshColumns) Input Stationary/Weight Stationary (dataflow) Scratchpad/Accumulator capacity (in Kib) (sp_banks, sp_capacity, acc_capacity) Datatypes for I/O and partial accumulations (inputType, outputType, accType) Access-execute decoupling queue parameters (ld ,st, ex, rob) DMA parameters and scaling factor (optional). Custom RISC-V ISA extension support. Or, can be achieved via GEMM. Image processing data –&gt; im2col –&gt; Matrix Multiplication (Needs convolution)    (preprocessing)   (Nested for loops) Performance: Memory partitioning strategy, tiling and scheduling can greatly impact performance of workload. Profiling access patterns in workloads can give better ideas in dataflow optimization. Spatial and Temporal data-reuse can further impact performance. Maximum area (67.1%) is still captured by SRAM on chip, followed by the rocket core and then the accelerator. In conclusion, what makes Gemmini unique from other implementations is the manufacturability as a full SoC, Linux OS support and Virtual address translation support (along with shared memory access). Dataflow, Bitwidth, Input Dimensions, Bus Size, HOST CPU,Pipelines, Memory and memory banks all affect the performance. Gemmini enables exploration of a vast design space, profile system-level performance using Chipyard + FireMarshal infrastructure and uncover reliability issues that can occur across the stack. 3. Agile Hardware (AHA) of Amber SoC using CGRA A Coarse Grain Reconfigurable Architecture (CGRA) is a reconfigurable architecture that operates on coarser granularity than traditional reconfigurable architectures such as FPGA (fine-grained). CGRA consists of an array of Processing Elements (PE) and memory (MEM) tiles connected via reconfigurable interconnect that are capable of executing word-level operations and can be reconfigured to minimise idling time through online partial reconfiguration (necessary of edge devices and servers running parallel applications within the fabric). Each hardware block has its own DSL for PE (PEak), MEM (Lake) and Interconnect (Canal). This is compiled to generate the final RTL and routed to the VLSI flow to generate GDSII. The compilers map applications written in Halide to a CGRA bitstream. It receives updated specifications (rewrite rules, routing graph) from the DSL-based hardware generators, allowing it to compile to evolving CGRA hardware with no manual updates. The coupled accelerator compiler takes the rewrite rules generated by each DSL compiler to map applications to the hardware. Halide (DSL in C/C++) specified applications are mapped to CGRA (Figure 5). Amber SoC is a 367 GOPS, 538 GOPS/W 16nm SoC designed with the AHA co-design approach for dense linear algebra applications (Figure 4). Amber demonstrates 2x speed up compared to baseline FPGA by reduction in idle time through fast (3.5us) dynamic partial reconfiguration (DPR). It intelligently handles data access to streaming memory without DMA access (to reduce power consumption) by leveraging the affine data access patterns (e.g. nested for loop) in dense linear algebra applications. This is done using Iteration Domain (range of memory identification), Address Generator (address calculation) and Schedule generator (read/write signals). No manual intervention is necessary as the application compiler handles this task. Wide fetch SRAM in streaming memory to reduce energy consumption (48%), and Resource sharing of ID/AD/SG to reduce area (50%). It chains together PEs to perform less frequent but necessary algebraic operations (FPdiv, log, sin etc) with very small area overhead (0.2%) and saves 37.8% area compared to on ship complex op circuitry. 4. Conclusions The cost of verification and software maintainability (of both, existing and new codebase) would be the key to determine the way forwards in computing. Both face a similar challenge in developing efficient algorithms for mapping data/software programs onto the systolic arrays/CGRA. This can be difficult, especially for large and complex applications. In contrast to systolic arrays, CGRAs are flexible enough to adapt to different applications. Both, Systolic Arrays and CGRAs may not perform as well as specialised hardware for certain types of tasks. For example, a general-purpose processor may be faster for tasks that require a high level of sequential processing. In this sense, both are domain-specific architectures. In either case, a rigorous approach to system-level verification and validation is a challenge; for which formal methods, DSE tools and profiling tools would be necessary. Further, Physical design needs manual interventions, which can drastically impact performance. This can be mitigated by automated tests for DFM (Design for Manufacturability/Sign-Off). To conclude, the fragmented landscape of ASICs for computing are causing a barrier to new innovations from the software frontend. Standardising the practices for developing new ASICs or CGRAs is a direction in the right step. What can be improved here is to allow for more comfortable entry points to SOC practitioners to allow configuration and testing of these devices through a cloud based infrastructure to iteratively evolve and make the portability of the existing software to the hardware feasible. Lastly, on a personal observation, the codebase of both needs a lot more comments. It’s a mess.]]></summary></entry><entry><title type="html">Read and Organize your PDFs better</title><link href="http://localhost:4000/posts/2023/read-your-pdf-better/" rel="alternate" type="text/html" title="Read and Organize your PDFs better" /><published>2023-01-26T00:00:00+01:00</published><updated>2023-01-26T00:00:00+01:00</updated><id>http://localhost:4000/posts/2023/reading-pdfs-better</id><content type="html" xml:base="http://localhost:4000/posts/2023/read-your-pdf-better/"><![CDATA[<h4 id="invert-your-pdf-colors-for-a-stress-free-reading">Invert your PDF colors for a stress-free reading</h4>

<p><img src="/assets/images/01inv-colors-pdf.png" alt="inverted_color_pdf" /></p>

<p>In academia, we have to study a lot of portable document formats, or PDFs, as normal people say it. Digital transition to note taking can be benefitial to some to keep things organized in one place and be accessible whenever we need. This takes a toll on our eyes as prolonged exposure to screen is bad. Here is what I usually do.</p>

<ol>
  <li>
    <p>Always set the theme to dark. This way the contrasts help reduce the stress on your eyes. In addition, I would keep the monitor/screen settings to slightly warm.</p>
  </li>
  <li>
    <p>Google Chrome extensions help to invert the colors of all the websites that you visit. One of the extensions I like to use is called <a href="https://chrome.google.com/webstore/detail/dark-reader-dark/kbbbldgkhcpkmmjbjelmkjkchibeklng">DarkReader</a> which automatically inverts colors for all the sites I visit. Selectively, I can uninvert colors back to normal when needed or toggle light/dark modes for specific websites.</p>
  </li>
  <li>
    <p><strong>[In Adobe Acrobat]</strong> Now, coming back to the topic at hand. How to invert the colors of PDFs. If you like to use a PDF reader software like Adobe Acrobat, you can find this setting here: <strong>Menu</strong> &gt; <strong>Preferences</strong> &gt; <strong>Accessibility</strong> &gt; <strong>Replace Document Colors</strong><br />
I like to keep my settings to <em>White text on Black</em>.<br />
Additionally in Adobe Acrobat, my personal preference is to have two pages displayed at once. Perhaps because, in a sense, it gives a better approximation to handling an open book. This can be done from here: <strong>Menu</strong> &gt; <strong>View</strong> &gt; <strong>Page Display</strong> &gt; <strong>Two-page View</strong></p>
  </li>
  <li>
    <p><strong>[In Google Chrome]</strong> If you often open PDFs in Google Chrome (using some pdf extension) directly and start reading there. Here is one thing you can do, Press Ctrl+Shift+I. Go to the <strong>Console</strong> tab, and paste the following code.</p>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">cover</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">css</span> <span class="o">=</span> <span class="s2">`
position: fixed;
pointer-events: none;
top: 0;
left: 0;
width: 100vw;
height: 100vh;
background-color: white;
mix-blend-mode: difference;
z-index: 1;
`</span>
<span class="nx">cover</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="dl">"</span><span class="s2">style</span><span class="dl">"</span><span class="p">,</span> <span class="nx">css</span><span class="p">);</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">cover</span><span class="p">);</span>
</code></pre></div>    </div>
    <p>This temporarily inverts the colors of the PDF in the open PDF document. This unfortunately needs to be repeated everytime you open a PDF in a chrome tab.</p>
  </li>
</ol>

<h4 id="manage-you-papers-through-this-naming-scheme">Manage you papers through this naming scheme</h4>

<p>When you download papers either from arxiv or online digital libraries like ACM or IEEE (in my case). It is simply overwhelming to keep a track of where those papers are and how they can be searched for.</p>

<ul>
  <li>To keep it simple, I use the following naming convention for all the research paper PDFs:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yyyy_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf
</code></pre></div>    </div>
    <p>Having year in the beginning makes it easier to sort, and having title, research group and the university/organization name makes it easier to search.</p>
  </li>
</ul>

<p>The online google chrome extension called <a href="https://chrome.google.com/webstore/detail/arxiv-utils/mnhdpeipjhhkmlhlcljdjpgmilbmehij?hl=en">arxiv-utils</a> makes life much easier. It allows you to define this format in it’s settings, and adds a separate PDF download button called <strong>Direct Download</strong> on every <code class="language-plaintext highlighter-rouge">arxiv.org/abs</code> page which renames the PDF automatically in this format and downloads it for you. This is very useful.</p>

<ul>
  <li>Now how to best organize this in a directory structure? One of the directory structures I like to organize the files is the following:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~\papers\
	|ISCA 2021
	|   |yyyymmdd_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf
	|   |...
	|ISSCC 2021
	|   |yyyymmdd_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf
	|   |...
	.   .
	.   .
</code></pre></div></div>
<p>Another way to organize could be through topic categories. This I feel is not the best organization. Having the papers sorted according to conferences, already gives you enough information to know the types/topic category of papers you can find in that conference.</p>

<p>If you found this post useful, share it with your peers. You may also leave a comment and let me know. Happy Reading!</p>]]></content><author><name>Amitabh Yadav</name></author><category term="Productivity" /><summary type="html"><![CDATA[Invert your PDF colors for a stress-free reading In academia, we have to study a lot of portable document formats, or PDFs, as normal people say it. Digital transition to note taking can be benefitial to some to keep things organized in one place and be accessible whenever we need. This takes a toll on our eyes as prolonged exposure to screen is bad. Here is what I usually do. Always set the theme to dark. This way the contrasts help reduce the stress on your eyes. In addition, I would keep the monitor/screen settings to slightly warm. Google Chrome extensions help to invert the colors of all the websites that you visit. One of the extensions I like to use is called DarkReader which automatically inverts colors for all the sites I visit. Selectively, I can uninvert colors back to normal when needed or toggle light/dark modes for specific websites. [In Adobe Acrobat] Now, coming back to the topic at hand. How to invert the colors of PDFs. If you like to use a PDF reader software like Adobe Acrobat, you can find this setting here: Menu &gt; Preferences &gt; Accessibility &gt; Replace Document Colors I like to keep my settings to White text on Black. Additionally in Adobe Acrobat, my personal preference is to have two pages displayed at once. Perhaps because, in a sense, it gives a better approximation to handling an open book. This can be done from here: Menu &gt; View &gt; Page Display &gt; Two-page View [In Google Chrome] If you often open PDFs in Google Chrome (using some pdf extension) directly and start reading there. Here is one thing you can do, Press Ctrl+Shift+I. Go to the Console tab, and paste the following code. var cover = document.createElement("div"); let css = ` position: fixed; pointer-events: none; top: 0; left: 0; width: 100vw; height: 100vh; background-color: white; mix-blend-mode: difference; z-index: 1; ` cover.setAttribute("style", css); document.body.appendChild(cover); This temporarily inverts the colors of the PDF in the open PDF document. This unfortunately needs to be repeated everytime you open a PDF in a chrome tab. Manage you papers through this naming scheme When you download papers either from arxiv or online digital libraries like ACM or IEEE (in my case). It is simply overwhelming to keep a track of where those papers are and how they can be searched for. To keep it simple, I use the following naming convention for all the research paper PDFs: yyyy_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf Having year in the beginning makes it easier to sort, and having title, research group and the university/organization name makes it easier to search. The online google chrome extension called arxiv-utils makes life much easier. It allows you to define this format in it’s settings, and adds a separate PDF download button called Direct Download on every arxiv.org/abs page which renames the PDF automatically in this format and downloads it for you. This is very useful. Now how to best organize this in a directory structure? One of the directory structures I like to organize the files is the following: ~\papers\ |ISCA 2021 | |yyyymmdd_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf | |... |ISSCC 2021 | |yyyymmdd_&lt;paper title&gt;_&lt;research group&gt;_&lt;univesity&gt;.pdf | |... . . . . Another way to organize could be through topic categories. This I feel is not the best organization. Having the papers sorted according to conferences, already gives you enough information to know the types/topic category of papers you can find in that conference. If you found this post useful, share it with your peers. You may also leave a comment and let me know. Happy Reading!]]></summary></entry><entry><title type="html">The Hardware Lottery</title><link href="http://localhost:4000/posts/2023/the-hardware-lottery/" rel="alternate" type="text/html" title="The Hardware Lottery" /><published>2023-01-18T00:00:00+01:00</published><updated>2023-01-18T00:00:00+01:00</updated><id>http://localhost:4000/posts/2023/the-hardware-lottery</id><content type="html" xml:base="http://localhost:4000/posts/2023/the-hardware-lottery/"><![CDATA[<p>Sara Hooker, <a href="https://arxiv.org/abs/2009.06489">“The hardware lottery”</a>, Commun. ACM 64, 12, December 2021, pp. 58-65, https://doi.org/10.1145/3467017</p>

<h4 id="synopsis">Synopsis</h4>
<p>The term, Hardware Lottery, is used to define the unintentional prejudice observed historically towards certain research ideas in computer science that succeed, not because they were far superior to others but due to how well-suited they were for the available hardware and software of the time, often creating ‘noise’ to the interpretability of new research directions. The domain-specific era is even more prone to this, where the hardware landscape is getting even more fragmented. Figure 1 demonstrates this. Writing software for each system is expensive and even then chances are only those companies would succeed whose technologies can successfully be adopted to commercial applications. Specialised hardware can be replaced with the advent of newer technologies, therefore scalability and adoptability is critical to a hardware development infrastructure.</p>

<p><img src="/assets/images/ai_accelerators_2022.png" alt="Figure 1: Peak performance vs peak power of publically announced accelerators in 2022" />
Figure 1: Peak performance vs peak power of publically announced accelerators in 2022 <a href="https://www.arxiv.org/abs/2210.04055">[arxiv:2210.04055]</a></p>

<h4 id="strengths">Strengths</h4>
<p>The numerous examples from history from Edison’s Phonograph to modern GPUs is an eye opener and provides a broader perspective to think about the larger picture of computing hardware landscape. The presented solutions are agreed upon propositions in the research community. The emphasis on revisiting FPGAs and CGRAs for harmonising hardware development, developing better profiling tools and using AI for design space exploration is something I agree with. Secondly, just like hardware is being evolved to be highly parameterized, parameterized DSLs for reproducing results on different hardware is necessary (functional programming, and a higher abstraction level of application specification can help: e.g. Code Generating (Explainable) AI for hardware backends).</p>

<h4 id="weaknesses">Weaknesses</h4>
<p>The article highlights the issues that cost, limited availability, and the lack of standardisation in hardware, will make it difficult for researchers to replicate or reproduce results. One potential missing element in the article is the discussion that the difficulties in obtaining hardware resources also limits the number of researchers working on certain problems, and slowing down of progress in certain areas. It leads to a lack of diversity in the types of research being conducted, as researchers may be limited to working on problems that can be solved with the hardware they have available (not to mention, Gartner Hype Cycle). Additionally, an obstacle is technology not being available for researchers from underprivileged countries, institutions or backgrounds (IC production is Expensive!). Lastly, it could also be discussed that standardising a set of norms for developers (in academia and industry) would help mitigate the fragmented landscape, e.g. with the open-source hardware platform like RISC-V, and compiler infrastructure like LLVM/MLIR.</p>

<h4 id="thoughts">Thoughts</h4>
<p>Domain-Specific era didn’t dawn until Moore’s Law and Dennard Scaling stopped to apply. It can be worth investigating the next research idea (after-domain specific) and lay a path for its integration in future, which might not apply today for immediate adoption but can be simply available when needed [<span style="color:#00689A;">1</span>, <span style="color:#00689A;">2</span>]. This can be an expensive endeavour and may not succeed - “being too early is the same as being wrong” - so caution must be exercised. For academic research, some areas include, photonic accelerator, synaptic transistor, memristor array, new memory technology, neuromorphic etc. for hardware; Neurosymbolic AI, Formal Methods etc. for software. Secondly, while it is true presently that having specialised hardware can greatly accelerate the training of deep learning models, there are also other ways to address the issue of creating uniformity in the domain-specific landscape, such as algorithmic research to use general purpose hardware (not everything needs DL), using cloud computing resources, and creating cross-DSL(domain-specific language) compilers, DSE tools and open-source solutions. Lastly, one positive impact in the DS-era would be that small teams and independent researchers would be making breakthroughs with more limited resources through the use of creative solutions and open-source tools.</p>

<h4 id="takeaways">Takeaways</h4>
<p>Hardware development maintained its course ever since the 90s, however software developed fast (number of ML publications since 2005). This led to hardware being abstracted away completely by software. With increasing software complexity, hardware will be a key factor that would dictate the success for a research idea [<span style="color:#00689A;">3</span>]. Whereas for the hardware competing in the ‘bigger is better’ race, history tells us, “a deficiency in any one number of factors dooms an endeavour to failure.” A critical understanding of the hardware/software landscape, their compatibility and co-designability is therefore elemental.</p>
<ul>
  <li>Large new neural networks would need faster development time for corresponding accelerators, some architectures would need even more constrained design than scaling systolic arrays/vector architectures e.g. [<span style="color:#00689A;">4</span>, <span style="color:#00689A;">5</span>, <span style="color:#00689A;">6</span>] and [<span style="color:#00689A;">7</span>].</li>
  <li>Accelerating development time and cost is essential for hardware engineers. Ideas like [<span style="color:#00689A;">8</span>, <span style="color:#00689A;">9</span>] didn’t succeed because the cost of iteration was too high. For software, developers need to come up with creative solutions to adapt to the current norm of accelerators.</li>
  <li>Looking ahead is essential to progress, ideas respawn when the time is right e.g. the case of deep neural networks in software and [<span style="color:#00689A;">10</span>, <span style="color:#00689A;">11</span>] for corresponding hardware. Additionally, DNNs may not be the only way forward, at some point a new technology may spawn (e.g. something that better resembles the human brain) and we may have to redo everything. Scaling and Adaptability here needs more emphasis.</li>
  <li>From an economist’s perspective, the law of supply and demand is at play here. In one line, “Necessity is the mother of invention”.</li>
</ul>

<h4 id="favourite-bits">Favourite bits</h4>
<p>“Our own cognitive intelligence is both hardware and software [a domain-specific computer].”</p>

<p>“[accelerators] Happy families are all alike, unhappy families are unhappy in their own way.”</p>

<p>“[bigger is better race] An apt metaphor is that we may be trying to build a ladder to the moon.”</p>

<p>“Scientific progress occurs when there is a confluence of factors which allows scientists to overcome the ‘stickiness’ of the existing paradigm.”</p>

<p>“Registering what differs from our expectations, remains a key catalyst in driving new scientific discoveries.”</p>

<p>“[computer chip is] inscribing words on grains of sand.”</p>

<h4 id="suggested-reading">Suggested Reading</h4>
<p>Science in the age of selfies [<span style="color:#00689A;">12</span>].</p>

<h4 id="case-study-of-isa">Case study of ISA</h4>
<p>Krste Asanovic once said, ‘Don’t make your own ISAs.’ This is partly true in the sense that an incompatible ISA without existing software would never make it to upstream. We have observed the success of two proprietary ISAs so far, x86_64 and ARM32/64, asserting their dominance in desktop/server and mobile markets, respectively due to them being early and developing their own software ecosystem. Other ISAs of the time VAX, MIPS, SPARC etc became only moderately successful (and are now out of circulation). Why is it partly true? Because new systems, like Graphcore and Cerebras are bringing enough performance (in addition to marketing) to the table to compete in the HPC space.</p>

<h3 id="references">References</h3>
<div style="font-size:11pt">
[<span style="color:#00689A;">1</span>] Sutton, R. The bitter lesson, 2019. URL http://www.incompleteideas.net/IncIdeas/BitterLesson.html.<br />

[<span style="color:#00689A;">2</span>] Welling, M. Dowestill need modelsorjust more data and compute?, 2019. URL shorturl. at/qABIY.<br />

[<span style="color:#00689A;">3</span>] Barham, P. and Isard, M. Machine learning systems are stuck in a rut. In Proceedings of the Workshop on Hot Topics in Operating Systems, HotOS ’19, pp. 177–183, New York, NY, USA, 2019. Association for Computing Machinery. ISBN 9781450367271. doi: 10.1145/3317550.3321441. URL https://doi.org/10.1145/3317550.3321441.<br />

[<span style="color:#00689A;">4</span>] Hooker, S., Courville, A., Clark, G., Dauphin, Y., and Frome, A. What Do Compressed Deep Neural Networks Forget? arXiv e-prints, art. arXiv:1911.05248, November 2019.<br />

[<span style="color:#00689A;">5</span>] Gale, T., Elsen, E., and Hooker, S. The state of sparsity in deep neural networks, 2019.<br />

[<span style="color:#00689A;">6</span>] Evci, U., Gale, T., Menick, J., Castro, P. S., and Elsen, E. Rigging the Lottery: Making All Tickets Winners. arXiv e-prints, November 2019.<br />

[<span style="color:#00689A;">7</span>] Zhen, D., Yao, Z., Gholami, A., Mahoney, M., and Keutzer, K. Hawq: Hessian aware quantization of neural networks with mixedprecision, 10 2019.<br />

[<span style="color:#00689A;">8</span>] Kingsbury, B., Morgan, N., and Wawrzynek, J. Hipnet-1: A highly pipelined architecture for neural network training, 03 1998.<br />

[<span style="color:#00689A;">9</span>] Sackinger, E., Boser, B. E., Bromley, J., LeCun, Y., and Jackel, L. D. Application of the anna neural network chip to high-speed character recognition. IEEE Transactions on Neural Networks, 3(3):498–505, 1992.<br />

[<span style="color:#00689A;">10</span>] Hinton, G. E. and Anderson, J. A. Parallel Models of Associative Memory. L. Erlbaum Associates Inc., USA, 1989. ISBN 080580269X.<br />

[<span style="color:#00689A;">11</span>] Rumelhart, D. E., McClelland, J. L., and PDP Research Group, C. (eds.). Parallel Distributed Processing: Explorations in the Microstructure of Cognition, Vol. 1: Foundations. MIT Press, Cambridge, MA, USA, 1986. ISBN 026268053X.<br />

[<span style="color:#00689A;">12</span>] Geman, Donald, and Stuart Geman. "Science in the age of selfies." Proceedings of the National Academy of Sciences 113.34 (2016): 9384-9387. <br />
</div>]]></content><author><name>Amitabh Yadav</name></author><category term="Digital Design and Simulation" /><summary type="html"><![CDATA[Sara Hooker, “The hardware lottery”, Commun. ACM 64, 12, December 2021, pp. 58-65, https://doi.org/10.1145/3467017]]></summary></entry><entry><title type="html">How to succeed as a non-IIT Bachelor student in India?</title><link href="http://localhost:4000/posts/2020/marks-matter/" rel="alternate" type="text/html" title="How to succeed as a non-IIT Bachelor student in India?" /><published>2020-05-30T00:00:00+02:00</published><updated>2020-05-30T00:00:00+02:00</updated><id>http://localhost:4000/posts/2020/marks-matters</id><content type="html" xml:base="http://localhost:4000/posts/2020/marks-matter/"><![CDATA[<p><img src="/assets/images/electronics1.jpg" alt="Electronics is love" /></p>
<blockquote>
  <p>Marks don’t Matter.</p>
</blockquote>

<p>This is probably the very first <strong>wrong assumption</strong> you’ll make as you start your Bachelors of Electronics Engineering. I can only tell you that I have been rejected countless number of times because I was an 85% mark student and not a 95% one. But, first let’s start at the beginning.</p>

<p>So, who am I? My name is Amitabh Yadav, and like you, I too was once a bachelor student at the Electronics Department at UPES, you guessed it, Not an IIT. I graduated in 2017 with a GPA of 3.1/4.0 which is somewhere about 80 - 85%, so maybe as an above average student. After leaving UPES, I was an intern at CERN - yes, the very place where the Large Hadron Collider is. Following that I did my master studies at TU Delft, in the Netherlands. And currently, I hold a joint appointment at Berkeley National Laboratory and the University of California in Berkeley, in the United States. Berkeley is one of the top 10 universities in the world, has produced innumerable number of innovations in Electronics and Computer science. Berkeley is credited with the discovery of 16 elements of the periodic table and has produced 8 Turing Laureates, and more than 100 Nobel laureates — that should say enough.</p>

<p><strong>Now, why you should listen to me?</strong> I’ll tell you the truth, whatever I am today, believe it, I owe a great deal of it to my time spent at UPES, my bachelors university. I worked hard, I fell in love with Electronics and went above and beyond to test my understanding. In my bachelors, I competed in 5 national and international competitions, completed 2 funded projects, a major and a minor project, published 1 paper, filed 1 patent, did 3 internships, and graduated in the top 10 of my class. Beside this, I also volunteered for cultural and technical fests, the IEEE student chapter and was the Discipline Committee head of College of Engineering at the Dept of Student Affair, DSA in my final year. Today, the career I chose is much more demanding than that. And my bachelors trained and tested me to get ready for the challenges I face in my life, today. I was very fortunate to have learnt and trained under the professors there, and the memories I cherish the most are that of Dehradun. It was my professors, whom I approached when I was stuck at a technical problem, it was them who helped me arranged money when my team and I needed funding for our project and arranged for a lab space to work in, it was them with whom I talked to about my personal problems, and who pushed me to become a better engineer. It was one of my professors, who first introduced me to micro-controllers in my very first year and gifted me a Raspberry Pi when I graduated, that I still use by the way. Bachelors is truly a rewarding time.</p>

<p><strong>What you should be doing?</strong> Let me put it very simply. The degree of Bachelors in Technology, B.Tech. that you will earn from UPES is equivalent to the B.Tech. from an IIT, and even an equivalent to a Bachelor of Science, B.S. degree from MIT. All these degrees offer (nearly) the same curriculum and will open the exact same doors after completing the degree. You can apply for all the jobs that require a bachelors degree, you will be eligible to apply for a Masters or a PhD after bachelors. You have earned the basic qualification. If you do things right, you will have a bachelors degree in 4 years.</p>

<p>I’m sure you must be skeptical of this argument. I’ll tell you why, you may be thinking, you have earned the same degree as the other institutes, but you are not as exceptionally trained as the students there. That, let me break it down to you, is not true. The relevant subjects you are going to study are exactly the same as the other institutes. What is different then? I’ll tell you what you need to know. Know this, as a bachelor student, the most important resource you have is TIME. You have been given 4 years to study and develop your principles and foundations in a subject that is going to have a profound effect on the life and career you’ll make for yourself. 4 years is as long as a PhD! 4 years to peacefully study the principles of one of the best subjects that will show you how everything in the world around you works.</p>

<p><strong>Now, how do you make the best out of your time as a Bachelor Student?</strong> Let me first sell you Electronics and why you should be motivated to learn about it. You probably already know the cliche that Electronics is literally everywhere! Let me tell you some examples which are not so obvious. Neural Implants - developing nano-scale cranial sensors for sensing thoughts and using signal processing to understand those thoughts. Neural actuators are nano scale cranial implants actuating parts of the brain to restore function. Imagine using such implants to repair lost function of limbs or restoring lost sight. This is also electronics and this is happening today. Biomedical electronics involves making photo, piezo, chemical and all types of sensors and actuators to enable medical advances. CT Scan and MRI machines are all very extensively engineered applications of Signal Processing, Analog and Digital Electronics and Electromagnetic Field Theory - and completing your bachelor studies in Electronics will enable you to understand each and every aspect of this.</p>

<p>Another example, Voyager-I is an extremely over-engineered project that was launched in 1977 and is an absolute marvel of electronics. It was built for a mission for just a couple of years. Today, it is more than 13 billion miles away from earth, yet we can still receive its data after more than 40 years. It takes about 20 hours of 1 way communication with Voyager 1 and the received signal strength has deteriorated from 23 watts to attowatt, which is 1 billionth of a watt, but we can still capture and decode it. It’s all communication, antenna theory, electro-magnetics, digital and analog electronics and Signal Processing.</p>

<p>You might wonder these are isolated examples - NO, they are not. The biomedical example, it’s happening here, back in Cory Hall in Berkeley. Wireless communication is one of the most mysterious and challenging fields out there. Why do you think there is 3G, 4G and now, 5G. 3G was 40 Mbps, 4G LTE is around 100 Mbps and 5G is promising nearly 10Gbps. It’s not magic, it’s a complete redesign of your communication systems with new ideas that are being innovated by electronics engineers - again, all electronics and communication systems.</p>

<p>During my Masters I specialized in Experimental Quantum Computing. And my current research is in Theoretical Quantum Information. I am developing quantum algorithms to understand patterns from Exabytes of data. You can see the variety of applications of studying electronics by this.</p>

<p>Now, there is a reason, why I gave you these examples, and if there is one thing that I could have told my younger self is that, start thinking about applications. Each topic you study in electronics - think how unlimited are it’s applications. Whether it’s Thevenin and Norton’s theorem that you learn in 1st year or whether it’s Fabrication methods of Micro and Nano Electo-Mechanical systems you learn in the final year. Think about the applications. There is a very straightforward relation of application to interest. When you think about applications, you start developing the curiosity to know something new. You automatically develop a thirst for knowledge and a need to learn attitude.</p>

<p>Now, some students may say that I don’t have interest in this subject or I don’t like this subject. I’ll tell you why and how can you overcome this. <strong>The amount of interest you have in a subject is directly related to how well you perform in the subject.</strong> Everyone loves the feeling that if there is a problem and you know that you can solve it. This feeling is at the peak when you’re in an examination hall, and even higher when you solve the real world problems out there. If you become an expert in a subject you will automatically love it. Not only that, you’ll start thinking innovative ways of how you can apply the knowledge to create something new. I love a quote by Pablo Picasso on this - Learn the Rules Like a Pro, So You Can Break Them Like an Artist.</p>

<p><strong>So, a very simple rule to follow is: To develop an Interest in your subject, in your field, become an expert in it. And to become an expert, simply start thinking about the applications.</strong> Once you become an expert and develop that natural interest, your mind will be a powerhouse of innovations. Being in India, gives us this unique opportunity that forces us to solve problems within the limited resources we have and think out of the box. It’s a gold mine for unique ideas and an untapped potential for innovations. The world needs solutions that are affordable.</p>

<p>Today on the internet you have an endless resource of knowledge at your disposal. OCW by MIT, EDX, Coursera, NPTEL all have recorded classroom lectures, professors are posting their lectures and notes online freely on all of the topics you study in bachelors and also the more advanced ones. Use them instead of watching random videos on YouTube or Facebook. Solve the practice questions that you can get at these resources and test yourself against some of the brightest minds of the planets who too will be facing the exactly same questions as you are. That is, you’ll find out, is one hell of a motivation to get started to attempt new challenges.</p>

<p><strong>One argument I get a lot is, that the market is very competitive and jobs are hard to find. I will not mislead you by telling that is not true. It is hard out there.</strong> The number of eligible applicants are many and jobs are few. But there is a solution to that. The industry is hungry for innovators, it looks for people who push their limits to reach absolute perfection. The industry values such people and will approach you with a job offer, if you’re the one who can do the job. There is a saying in the industry, “You are not paying me to for the 20 minutes in which I solved the problem, you are paying me for the years I spent learning how to solve the problem in 20 minutes”. The people who developed your iPhone 11 are the absolute best people who have designed and tested the A13 Bionic chip to it’s absolute limits to assure there are no timing mismatches in processing, no data corruption occurs when 1 or many transistors die out or no hardware security threats affect your data.</p>

<p>Now, I know it sounds amazing when you hear it like this - the advanced stuff. But it’s only partially true. I agree a lot of these topics require further studies or a certain number of years of experience. But, as I said, it is just one half of the complete story. I’ll hopefully start my PhD in the coming years, but let me tell you, as a researcher today, most of the topics that I need to solve my challenges is not from my masters studies but everything I learnt as a bachelor. My masters education was less about learning new and advanced methods, and more about enforcing the fundamentals that I learnt during my Bachelors. And a lot of the Master courses are extensions of your bachelors education. A masters in Machine Learning is an application of Linear Algebra, Calculus, Probability, and Statistics and Inference. I am working on Quantum Information Theory, and 90% of it is Linear Algebra, Probability Theory and Group Theory — all of these are the topics of bachelors — and I use the concepts I developed as a bachelors student to apply to quantum phenomena. This is again, to restore your faith that everything you study as a bachelor in the 4 years is absolutely relevant and very important.</p>

<p>I gave you the example of Maths. In your first year, you also study Physics and Chemistry. Why these? I can give you many examples, or I can simply tell you that I am an Electronics Engineer, appointed in the Physics Division, who specializes in Quantum Algorithms. If I had not studied these subjects properly, I would not be in Berkeley. Today, I try to read 2-3 quantum chemistry and quantum gravity papers on an average every week, and I am able to understand and appreciate them, only because I still keep up with my Physics and Chemistry. That is again, important.</p>

<p>Today, India is generating the highest number of engineers in the World every year. We have one of the youngest population. But all we get are IT jobs and outsourced jobs from the US. If our B.Tech is equivalent to a B.S. from MIT or B.Sc. from Oxford. Why is there such a discrimination in the job market? Now there are two ways to look at it. First, we can point fingers. First, it’s the government’s fault for not allocating enough funds to universities and their development. Second, it is the university management’s fault for not having enough labs and funding for your program. Third, it’s the professors fault who don’t teach you well enough.</p>

<p>I can probably relate to all 3 situations. Like any other university, UPES also had these flaws. But it’s is your life and no one but you is the in-charge of making the best out of it. During my time, I did my best to find a passion to pursue and to excel at. Like I said, you have the internet. Learn the topics that you study in class, from 3 or 4 different university lectures, and very importantly, solve questions. Learn the topics that may have been marked ‘out of syllabus’ in the class but are there in the book. They are there for a reason, and you already know that. So, leave no stone unturned.</p>

<p><strong>Secondly, let me tell you this because its important for you to know this.</strong> 90% percent of your bachelor education, does not require multi-million dollar labs and equipments. You don’t need a Xilinx Alevo accelerator or Nvidia Tegra GPU to implement and test your designs. Even the most advanced designs you can think of can be implemented on the equipment that is either already present in the labs or if not, is affordable enough for your university and the department. Most of the advanced labs and facilities that perhaps only the best universities in the world can offer, is consumed only by Professors, their PhDs and PostDoctoral Scholars. But this doesn’t mean and it must not stop you to aspire to use these facilities. Internships are the time to aspire for such opportunities. I, during my time as a bachelors student, applied to more than 100 internships, fellowships, studentships and scholarships in India and all around the world in both academia and industry — even got to work on the most expensive and largest machine ever built by humankind, the Large Hadron Collider! Aspire, but very importantly, do your research on the topic you are applying for, a generic and blank internship application is as good as nothing. Learn about the internship position, learn about the proposed problem, suggest ideas, express interest and then, apply like you have nothing to lose.</p>

<p>The very first priority of your college life is education, true. But college is also about developing your overall personality and your character. These will be perhaps the best 4 years of your life, so absolutely, engage in extra-curricular, spend time with your friends, plan trips, party hard and make it a fun 4 year journey. <strong>Take care of your physical and mental health.</strong> Learn new skills, develop new hobbies, share your problems with friends, professors and mentors. Everyone is there to help you. It might appear be overwhelming at some point, but I’ll tell you something one of my professors at UPES, once told us, “Engineering is about solving problems - they can technical, sure.. financial or even of managing time.” A philosophy you can derive for yourself is that, as an Engineer, you must forfeit the right to say, “I do not have time”. Discipline yourself, plan and optimize. As you will grow you will develop the preference or liking for one thing over the others and you’ll know which path to pursue.</p>

<p>In the last 3 years, after graduating from UPES, I have worked under a number of eminent scientists, in 4 different countries. I got to interact with industry experts like Sam Altman of OpenAI, Micheal Nielson of YCombinator, John Martinis, Ryan Babbush and Dave Bacon of Google Quantum AI, academic experts like Issac Chuang, Brandon Rayhaun and Umesh Vazirani of MIT, Stanford and Berkeley, respectively and even Nobel laureates, Jack Stienberger and Saul Perlmutter. Today, I may not remember every technical thing we discussed, but the most important life lesson I got from their examples is of being true to your craft. Being ethical in your efforts, creating something unique, true, uncorrupted and unequivocal is the way to succeed. Good Marks, Success, Awards, Recognition are all the false parameters to aim for, they are just the perks that appear along the way to your true path, which is Genuine and Ethical hard work. Just these two tools with make you succeed, in academia, industry and in life, really.</p>

<p>In the end, I’ll simply ask you to do this. Work hard, be ethical, be persistent and push your limits - if you push your limits, your limits will expand. Make the best out of your abilities, aim to get the highest marks and make the best out of the 4 years of your education. <strong>I encourage you think of yourself as a scientist, you don’t have to tell anyone that. Tell yourself and think and act like a scientist to solve every problem.</strong></p>

<p>[published originally on <a href="https://www.linkedin.com/pulse/how-succeed-non-iit-bachelor-student-india-amitabh-yadav/">linkedin</a> 🔗]</p>]]></content><author><name>Amitabh Yadav</name></author><category term="Productivity" /><summary type="html"><![CDATA[Marks don’t Matter. This is probably the very first wrong assumption you’ll make as you start your Bachelors of Electronics Engineering. I can only tell you that I have been rejected countless number of times because I was an 85% mark student and not a 95% one. But, first let’s start at the beginning. So, who am I? My name is Amitabh Yadav, and like you, I too was once a bachelor student at the Electronics Department at UPES, you guessed it, Not an IIT. I graduated in 2017 with a GPA of 3.1/4.0 which is somewhere about 80 - 85%, so maybe as an above average student. After leaving UPES, I was an intern at CERN - yes, the very place where the Large Hadron Collider is. Following that I did my master studies at TU Delft, in the Netherlands. And currently, I hold a joint appointment at Berkeley National Laboratory and the University of California in Berkeley, in the United States. Berkeley is one of the top 10 universities in the world, has produced innumerable number of innovations in Electronics and Computer science. Berkeley is credited with the discovery of 16 elements of the periodic table and has produced 8 Turing Laureates, and more than 100 Nobel laureates — that should say enough. Now, why you should listen to me? I’ll tell you the truth, whatever I am today, believe it, I owe a great deal of it to my time spent at UPES, my bachelors university. I worked hard, I fell in love with Electronics and went above and beyond to test my understanding. In my bachelors, I competed in 5 national and international competitions, completed 2 funded projects, a major and a minor project, published 1 paper, filed 1 patent, did 3 internships, and graduated in the top 10 of my class. Beside this, I also volunteered for cultural and technical fests, the IEEE student chapter and was the Discipline Committee head of College of Engineering at the Dept of Student Affair, DSA in my final year. Today, the career I chose is much more demanding than that. And my bachelors trained and tested me to get ready for the challenges I face in my life, today. I was very fortunate to have learnt and trained under the professors there, and the memories I cherish the most are that of Dehradun. It was my professors, whom I approached when I was stuck at a technical problem, it was them who helped me arranged money when my team and I needed funding for our project and arranged for a lab space to work in, it was them with whom I talked to about my personal problems, and who pushed me to become a better engineer. It was one of my professors, who first introduced me to micro-controllers in my very first year and gifted me a Raspberry Pi when I graduated, that I still use by the way. Bachelors is truly a rewarding time. What you should be doing? Let me put it very simply. The degree of Bachelors in Technology, B.Tech. that you will earn from UPES is equivalent to the B.Tech. from an IIT, and even an equivalent to a Bachelor of Science, B.S. degree from MIT. All these degrees offer (nearly) the same curriculum and will open the exact same doors after completing the degree. You can apply for all the jobs that require a bachelors degree, you will be eligible to apply for a Masters or a PhD after bachelors. You have earned the basic qualification. If you do things right, you will have a bachelors degree in 4 years. I’m sure you must be skeptical of this argument. I’ll tell you why, you may be thinking, you have earned the same degree as the other institutes, but you are not as exceptionally trained as the students there. That, let me break it down to you, is not true. The relevant subjects you are going to study are exactly the same as the other institutes. What is different then? I’ll tell you what you need to know. Know this, as a bachelor student, the most important resource you have is TIME. You have been given 4 years to study and develop your principles and foundations in a subject that is going to have a profound effect on the life and career you’ll make for yourself. 4 years is as long as a PhD! 4 years to peacefully study the principles of one of the best subjects that will show you how everything in the world around you works. Now, how do you make the best out of your time as a Bachelor Student? Let me first sell you Electronics and why you should be motivated to learn about it. You probably already know the cliche that Electronics is literally everywhere! Let me tell you some examples which are not so obvious. Neural Implants - developing nano-scale cranial sensors for sensing thoughts and using signal processing to understand those thoughts. Neural actuators are nano scale cranial implants actuating parts of the brain to restore function. Imagine using such implants to repair lost function of limbs or restoring lost sight. This is also electronics and this is happening today. Biomedical electronics involves making photo, piezo, chemical and all types of sensors and actuators to enable medical advances. CT Scan and MRI machines are all very extensively engineered applications of Signal Processing, Analog and Digital Electronics and Electromagnetic Field Theory - and completing your bachelor studies in Electronics will enable you to understand each and every aspect of this. Another example, Voyager-I is an extremely over-engineered project that was launched in 1977 and is an absolute marvel of electronics. It was built for a mission for just a couple of years. Today, it is more than 13 billion miles away from earth, yet we can still receive its data after more than 40 years. It takes about 20 hours of 1 way communication with Voyager 1 and the received signal strength has deteriorated from 23 watts to attowatt, which is 1 billionth of a watt, but we can still capture and decode it. It’s all communication, antenna theory, electro-magnetics, digital and analog electronics and Signal Processing. You might wonder these are isolated examples - NO, they are not. The biomedical example, it’s happening here, back in Cory Hall in Berkeley. Wireless communication is one of the most mysterious and challenging fields out there. Why do you think there is 3G, 4G and now, 5G. 3G was 40 Mbps, 4G LTE is around 100 Mbps and 5G is promising nearly 10Gbps. It’s not magic, it’s a complete redesign of your communication systems with new ideas that are being innovated by electronics engineers - again, all electronics and communication systems. During my Masters I specialized in Experimental Quantum Computing. And my current research is in Theoretical Quantum Information. I am developing quantum algorithms to understand patterns from Exabytes of data. You can see the variety of applications of studying electronics by this. Now, there is a reason, why I gave you these examples, and if there is one thing that I could have told my younger self is that, start thinking about applications. Each topic you study in electronics - think how unlimited are it’s applications. Whether it’s Thevenin and Norton’s theorem that you learn in 1st year or whether it’s Fabrication methods of Micro and Nano Electo-Mechanical systems you learn in the final year. Think about the applications. There is a very straightforward relation of application to interest. When you think about applications, you start developing the curiosity to know something new. You automatically develop a thirst for knowledge and a need to learn attitude. Now, some students may say that I don’t have interest in this subject or I don’t like this subject. I’ll tell you why and how can you overcome this. The amount of interest you have in a subject is directly related to how well you perform in the subject. Everyone loves the feeling that if there is a problem and you know that you can solve it. This feeling is at the peak when you’re in an examination hall, and even higher when you solve the real world problems out there. If you become an expert in a subject you will automatically love it. Not only that, you’ll start thinking innovative ways of how you can apply the knowledge to create something new. I love a quote by Pablo Picasso on this - Learn the Rules Like a Pro, So You Can Break Them Like an Artist. So, a very simple rule to follow is: To develop an Interest in your subject, in your field, become an expert in it. And to become an expert, simply start thinking about the applications. Once you become an expert and develop that natural interest, your mind will be a powerhouse of innovations. Being in India, gives us this unique opportunity that forces us to solve problems within the limited resources we have and think out of the box. It’s a gold mine for unique ideas and an untapped potential for innovations. The world needs solutions that are affordable. Today on the internet you have an endless resource of knowledge at your disposal. OCW by MIT, EDX, Coursera, NPTEL all have recorded classroom lectures, professors are posting their lectures and notes online freely on all of the topics you study in bachelors and also the more advanced ones. Use them instead of watching random videos on YouTube or Facebook. Solve the practice questions that you can get at these resources and test yourself against some of the brightest minds of the planets who too will be facing the exactly same questions as you are. That is, you’ll find out, is one hell of a motivation to get started to attempt new challenges. One argument I get a lot is, that the market is very competitive and jobs are hard to find. I will not mislead you by telling that is not true. It is hard out there. The number of eligible applicants are many and jobs are few. But there is a solution to that. The industry is hungry for innovators, it looks for people who push their limits to reach absolute perfection. The industry values such people and will approach you with a job offer, if you’re the one who can do the job. There is a saying in the industry, “You are not paying me to for the 20 minutes in which I solved the problem, you are paying me for the years I spent learning how to solve the problem in 20 minutes”. The people who developed your iPhone 11 are the absolute best people who have designed and tested the A13 Bionic chip to it’s absolute limits to assure there are no timing mismatches in processing, no data corruption occurs when 1 or many transistors die out or no hardware security threats affect your data. Now, I know it sounds amazing when you hear it like this - the advanced stuff. But it’s only partially true. I agree a lot of these topics require further studies or a certain number of years of experience. But, as I said, it is just one half of the complete story. I’ll hopefully start my PhD in the coming years, but let me tell you, as a researcher today, most of the topics that I need to solve my challenges is not from my masters studies but everything I learnt as a bachelor. My masters education was less about learning new and advanced methods, and more about enforcing the fundamentals that I learnt during my Bachelors. And a lot of the Master courses are extensions of your bachelors education. A masters in Machine Learning is an application of Linear Algebra, Calculus, Probability, and Statistics and Inference. I am working on Quantum Information Theory, and 90% of it is Linear Algebra, Probability Theory and Group Theory — all of these are the topics of bachelors — and I use the concepts I developed as a bachelors student to apply to quantum phenomena. This is again, to restore your faith that everything you study as a bachelor in the 4 years is absolutely relevant and very important. I gave you the example of Maths. In your first year, you also study Physics and Chemistry. Why these? I can give you many examples, or I can simply tell you that I am an Electronics Engineer, appointed in the Physics Division, who specializes in Quantum Algorithms. If I had not studied these subjects properly, I would not be in Berkeley. Today, I try to read 2-3 quantum chemistry and quantum gravity papers on an average every week, and I am able to understand and appreciate them, only because I still keep up with my Physics and Chemistry. That is again, important. Today, India is generating the highest number of engineers in the World every year. We have one of the youngest population. But all we get are IT jobs and outsourced jobs from the US. If our B.Tech is equivalent to a B.S. from MIT or B.Sc. from Oxford. Why is there such a discrimination in the job market? Now there are two ways to look at it. First, we can point fingers. First, it’s the government’s fault for not allocating enough funds to universities and their development. Second, it is the university management’s fault for not having enough labs and funding for your program. Third, it’s the professors fault who don’t teach you well enough. I can probably relate to all 3 situations. Like any other university, UPES also had these flaws. But it’s is your life and no one but you is the in-charge of making the best out of it. During my time, I did my best to find a passion to pursue and to excel at. Like I said, you have the internet. Learn the topics that you study in class, from 3 or 4 different university lectures, and very importantly, solve questions. Learn the topics that may have been marked ‘out of syllabus’ in the class but are there in the book. They are there for a reason, and you already know that. So, leave no stone unturned. Secondly, let me tell you this because its important for you to know this. 90% percent of your bachelor education, does not require multi-million dollar labs and equipments. You don’t need a Xilinx Alevo accelerator or Nvidia Tegra GPU to implement and test your designs. Even the most advanced designs you can think of can be implemented on the equipment that is either already present in the labs or if not, is affordable enough for your university and the department. Most of the advanced labs and facilities that perhaps only the best universities in the world can offer, is consumed only by Professors, their PhDs and PostDoctoral Scholars. But this doesn’t mean and it must not stop you to aspire to use these facilities. Internships are the time to aspire for such opportunities. I, during my time as a bachelors student, applied to more than 100 internships, fellowships, studentships and scholarships in India and all around the world in both academia and industry — even got to work on the most expensive and largest machine ever built by humankind, the Large Hadron Collider! Aspire, but very importantly, do your research on the topic you are applying for, a generic and blank internship application is as good as nothing. Learn about the internship position, learn about the proposed problem, suggest ideas, express interest and then, apply like you have nothing to lose. The very first priority of your college life is education, true. But college is also about developing your overall personality and your character. These will be perhaps the best 4 years of your life, so absolutely, engage in extra-curricular, spend time with your friends, plan trips, party hard and make it a fun 4 year journey. Take care of your physical and mental health. Learn new skills, develop new hobbies, share your problems with friends, professors and mentors. Everyone is there to help you. It might appear be overwhelming at some point, but I’ll tell you something one of my professors at UPES, once told us, “Engineering is about solving problems - they can technical, sure.. financial or even of managing time.” A philosophy you can derive for yourself is that, as an Engineer, you must forfeit the right to say, “I do not have time”. Discipline yourself, plan and optimize. As you will grow you will develop the preference or liking for one thing over the others and you’ll know which path to pursue. In the last 3 years, after graduating from UPES, I have worked under a number of eminent scientists, in 4 different countries. I got to interact with industry experts like Sam Altman of OpenAI, Micheal Nielson of YCombinator, John Martinis, Ryan Babbush and Dave Bacon of Google Quantum AI, academic experts like Issac Chuang, Brandon Rayhaun and Umesh Vazirani of MIT, Stanford and Berkeley, respectively and even Nobel laureates, Jack Stienberger and Saul Perlmutter. Today, I may not remember every technical thing we discussed, but the most important life lesson I got from their examples is of being true to your craft. Being ethical in your efforts, creating something unique, true, uncorrupted and unequivocal is the way to succeed. Good Marks, Success, Awards, Recognition are all the false parameters to aim for, they are just the perks that appear along the way to your true path, which is Genuine and Ethical hard work. Just these two tools with make you succeed, in academia, industry and in life, really. In the end, I’ll simply ask you to do this. Work hard, be ethical, be persistent and push your limits - if you push your limits, your limits will expand. Make the best out of your abilities, aim to get the highest marks and make the best out of the 4 years of your education. I encourage you think of yourself as a scientist, you don’t have to tell anyone that. Tell yourself and think and act like a scientist to solve every problem. [published originally on linkedin 🔗]]]></summary></entry><entry><title type="html">On the Electronics Systems of Experimental Sounding Rockets</title><link href="http://localhost:4000/posts/2017/the-sounding-rocket/" rel="alternate" type="text/html" title="On the Electronics Systems of Experimental Sounding Rockets" /><published>2017-10-17T00:00:00+02:00</published><updated>2017-10-17T00:00:00+02:00</updated><id>http://localhost:4000/posts/2017/the-sounding-rocket</id><content type="html" xml:base="http://localhost:4000/posts/2017/the-sounding-rocket/"><![CDATA[<p><img src="/assets/images/stratosiii.jpg" alt="stratos iii" /></p>

<p>The idea of rockets was conceived well before the idea of flight. It was well before even Sir Issac Newton gave his laws of motion. Interestingly, it is his third law of motion that governs the flight of a rocket.</p>

<blockquote>
  <p>For every action, there is an equal and opposite reaction.</p>
</blockquote>

<p>The earliest mention of the rocket was in 400BC in a Greek story, where a character Archytas uses a wooden pigeon suspended by wires and propelled by steam to amaze and mystify the Tarentum locals. This is related to the history of rockets for the simple fact that it is the earliest known mention of a man using Newton’s Third Law of action and reaction as a means of propulsion.</p>

<p>The actual gun powered rocket that we know of today was developed first in China back in the 13th century. But is that possible? There were no computers back then!</p>

<p>With time, the idea of rocketry and rocket applications has undergone tremendous changes. First developed as a firework show and then warfare. Today’s rockets find applications in atmospheric research, space applications, payload/satellite launch and would someday in transportation. A <a href="https://www.reddit.com/r/spacex/comments/64ew8x/falcon_9_a_systems_overview/">systems overview of Falcon 9</a> rocket will surely give you a good idea on the interdependencies of a rocket avionics systems. But, here we won’t be discussed too much on the rockets for space launch. We’ll start with something simpler, a Sounding Rocket.</p>

<p>It may be a simpler in design, but sounding rockets are extremely complicated to build, difficult to use and (often) risky to handle. According to definition by ISRO, the Indian Space Research Organisation,”Sounding Rockets are one or two-stage solid propellant rockets used for probing the upper atmospheric regions and for space research.” There are different altitude ranges for developing sounding rockets. The simplest cover the range from 1 to 10km. More complicated ones go beyond up till 20-30km. The sounding rockets developed by commercial space/rocket companies go beyond 500km (in space).</p>

<p>How do we determine the altitude to aim for, you ask? It depends on the application. If its atmospheric research, we aim for altitudes below the <strong>Karman line</strong> such an altitude of 50-80 km is apt. If it is space research, we go beyond 100km. For a comparison, you can imagine that the International Space Station revolves around the early at 408km altitude; and the space shuttle missions orbital altitudes were in the range of 304 kilometers to 528 kilometers. That’s the region you can experience <strong>microgravity</strong>.</p>

<p>A sounding rocket is launched by ‘ignition’ of the Rocket engine (or motor) which is often done through an e-match. But once a rocket is launched, how do we use it, operate it and possibly guide it? It is the sole responsibility of the onboard electronics system, sensing systems, telemetry systems, control system, payload deployment and recovery systems to check the state of rockets and take the necessary decisions, without a human supervision.</p>

<p><a href="https://dare.tudelft.nl/stratos3/">An example of sounding rocket.</a></p>

<center><iframe width="256" height="auto" src="https://www.youtube-nocookie.com/embed/_b_xWWojIiM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe> </center>

<p>Let’s go through the basic operation of a rocket:</p>

<ol>
  <li>
    <p><strong>Rocket Launch:</strong> A manually driven electronic system for igniting the rocket engine. Often this system is made with an engine valve control (as the Flight Termination System). A rocket launch can be dangerous and all necessary steps must be taken before any launch parameters considered. An inbuilt system check mechanism is made that checks for connectivity and proper functioning of each of the onboard electronics, sensor, and telemetry. Only after a successful check, it the launch allowed.</p>
  </li>
  <li>
    <p><strong>Lift Off:</strong> The ignition chamber of the rocket is the lowest and has a burnout time in seconds. Within seconds of burnout, the rocket gains enough inertia to cross miles in the sky. All this while, the sensor subsystem inside records and analyses the data from the various onboard sensor such as temperature, barometric pressure (for altitude), time, spin, acceleration, position (GPS) and others. All this data helps the rocket to be aware of its exact position and state at all points during a flight. This data is usually sampled every microsecond from each sensor.</p>

    <p>It is essential that rocket behaves in the determined way else the consequences can be bad. For this purpose, a trajectory is predefined for a rocket and everything is designed to strictly achieve that. Advanced control of sounding rocket consists of canards, driven by a separate servo that allows the rocket to actively stabilize its flight trajectory.</p>
  </li>
  <li>
    <p><strong>Apogee:</strong> Rockets follow a projectile motion during flight, and no matter how fast it can go, face it, it comes to a rest at some point. This is the highest point, called apogee. To achieve, highest possible apogee, a correctly implemented trajectory, and a strongly stabilized flight are essential. At this point, we need our rockets to deploy the payload. It is necessary that the payload is deployed after ascent has ceased and preferably near the apogee. At this point, the computing system of the rocket decides (based on the sensor data) to actuate the payload release mechanism (often implemented by servos). This decision making is crucial. A wrong decision can completely sabotage the mission. Inaccurate release, say during ascent, can interfere with rocket trajectory and can misguide a rocket in habitated areas. No matter how small a rocket is, a fall from that height is extremely dangerous. Therefore, for advanced control, we implement a triple modular redundancy in the system for accurate decision making.</p>
  </li>
  <li>
    <p><strong>Decent:</strong> As soon as the decent of rocket begins, it is essential to keep a track of the rocket’s position, speed and orientation in the 3-dimensional space. A rocket falling from a height of 80km can easily cross the sound barrier while decent. To stop the devastating aftermath, we equip the rocket with parachutes. And interestingly there are two of these - the drogue-chute and the main-chute. Drogue-chute is bestowed by the responsibility for initial deacceleration. This is smaller than the main-chute, as a sudden impact on the rocket body due to parachute ejection can easily create an impulse to tear the rocket apart. Further, the high altitude wind currents can absurdly drift the rocket far away from the expected landing site. This is usually done at a predetermined altitude but along with a manual override from the ground station. The main chute is deployed only after a considerable decent has been achieved. This is again governed by the rocket’s electronics control system.</p>
  </li>
  <li>
    <p><strong>Landing and Recovery:</strong> Let’s assume, everything went well and we have landed safely. Know it and accept it, this is rocketry and even after all the cake and watermelon, there is a good chance that <strong>anything can go wrong</strong>. Therefore, it is supremely important to take every possible step of caution.</p>
  </li>
</ol>

<p>So, we have landed but we need data and recover the rocket body. It has survived and is well enough <strong>to be reused</strong>. The onboard GPS is always connected with the transmitter that lets the ground control be aware of the rocket’s position at all times and enables them to recover it after the successful landing.</p>

<p>The ground control is a completely electronic and computing system that always keeps a track of the rocket performance and trajectory. It is in constant contact with the rocket and often controls the functioning of the onboard systems such as flight stabilization using canards, manual parachute deployment, manual mission abort (closing engine valve to cut propellant supply), recovery etc.</p>

<p>After all these operations done successfully, can we say, we have mentioned all the important points of a rocket electronics system? But, we forget the most important of all. One without which, none of the systems can work. And that is power. All electronics run on power and in such an agitated environment, the power consideration is highly demanded. A single glitch from the power system can cause the system to power down or worst, reset. Not to mention, the consequences. Thus, power is at the pinnacle of rocket electronics design. One must always start with formulating a power budget for the complete system. I’d say it exclusively here, “This is the first step” in rocket electronics design.</p>

<p>A perfect rocket would also implement video recording and telemetry system (my opinion). Because after all the effort, one definitely want to see how well it performed and all the phases it went through - looking far on the straight horizon all across, to reaching the point where you see the earth getting its curve, to seeing the change in color of the sky from blue to dark horizon of space and to see the contrast of day and night in the sky as the rocket spins about its axis.</p>

<p>It is after all these efforts and constant work and support from all the divisions of the rocket team, that the magnificent flies. Contrary to my notion, that I would not be able to summarise a rocket electronic system in a general and ‘brief’ manner, I seem to have covered a considerable ground here. But, let me just give you a warm gist that rocket electronics is vast and complicated- it brings together the power electronics team, computing team, algorithms team, data handling team, embedded systems team, robotics team and RF and Microwave team to handle all the operations of the electronic system. But if it weren’t that complicated, the old joke <em>‘It ain’t rocket science’</em> wouldn’t be so funny.</p>

<p>If you are interested into rocketry, <em>Introduction to Rocket Science and Engineering</em>, Travis S. Taylor, CRC Press is an interesting read.</p>

<p><strong>About:</strong> I wrote this article when I was working as a part of the Delft Aerospace Rocket Engineering (DARE) Team. I was responsible for designing the electronics systems for the flagship sounding rocket of that year, Stratos-III, that was being developed to break the then European altitude record for the student-built experimental sounding rocket. A video of the launch is <a href="https://www.youtube.com/watch?v=_b_xWWojIiM">available here</a>.</p>

<p>[published originally on <a href="https://www.linkedin.com/pulse/electronics-systems-experimental-sounding-rockets-amitabh-yadav/">linkedin</a> 🔗]</p>]]></content><author><name>Amitabh Yadav</name></author><category term="Aerospace" /><summary type="html"><![CDATA[The idea of rockets was conceived well before the idea of flight. It was well before even Sir Issac Newton gave his laws of motion. Interestingly, it is his third law of motion that governs the flight of a rocket. For every action, there is an equal and opposite reaction. The earliest mention of the rocket was in 400BC in a Greek story, where a character Archytas uses a wooden pigeon suspended by wires and propelled by steam to amaze and mystify the Tarentum locals. This is related to the history of rockets for the simple fact that it is the earliest known mention of a man using Newton’s Third Law of action and reaction as a means of propulsion. The actual gun powered rocket that we know of today was developed first in China back in the 13th century. But is that possible? There were no computers back then! With time, the idea of rocketry and rocket applications has undergone tremendous changes. First developed as a firework show and then warfare. Today’s rockets find applications in atmospheric research, space applications, payload/satellite launch and would someday in transportation. A systems overview of Falcon 9 rocket will surely give you a good idea on the interdependencies of a rocket avionics systems. But, here we won’t be discussed too much on the rockets for space launch. We’ll start with something simpler, a Sounding Rocket. It may be a simpler in design, but sounding rockets are extremely complicated to build, difficult to use and (often) risky to handle. According to definition by ISRO, the Indian Space Research Organisation,”Sounding Rockets are one or two-stage solid propellant rockets used for probing the upper atmospheric regions and for space research.” There are different altitude ranges for developing sounding rockets. The simplest cover the range from 1 to 10km. More complicated ones go beyond up till 20-30km. The sounding rockets developed by commercial space/rocket companies go beyond 500km (in space). How do we determine the altitude to aim for, you ask? It depends on the application. If its atmospheric research, we aim for altitudes below the Karman line such an altitude of 50-80 km is apt. If it is space research, we go beyond 100km. For a comparison, you can imagine that the International Space Station revolves around the early at 408km altitude; and the space shuttle missions orbital altitudes were in the range of 304 kilometers to 528 kilometers. That’s the region you can experience microgravity. A sounding rocket is launched by ‘ignition’ of the Rocket engine (or motor) which is often done through an e-match. But once a rocket is launched, how do we use it, operate it and possibly guide it? It is the sole responsibility of the onboard electronics system, sensing systems, telemetry systems, control system, payload deployment and recovery systems to check the state of rockets and take the necessary decisions, without a human supervision. An example of sounding rocket. Let’s go through the basic operation of a rocket: Rocket Launch: A manually driven electronic system for igniting the rocket engine. Often this system is made with an engine valve control (as the Flight Termination System). A rocket launch can be dangerous and all necessary steps must be taken before any launch parameters considered. An inbuilt system check mechanism is made that checks for connectivity and proper functioning of each of the onboard electronics, sensor, and telemetry. Only after a successful check, it the launch allowed. Lift Off: The ignition chamber of the rocket is the lowest and has a burnout time in seconds. Within seconds of burnout, the rocket gains enough inertia to cross miles in the sky. All this while, the sensor subsystem inside records and analyses the data from the various onboard sensor such as temperature, barometric pressure (for altitude), time, spin, acceleration, position (GPS) and others. All this data helps the rocket to be aware of its exact position and state at all points during a flight. This data is usually sampled every microsecond from each sensor. It is essential that rocket behaves in the determined way else the consequences can be bad. For this purpose, a trajectory is predefined for a rocket and everything is designed to strictly achieve that. Advanced control of sounding rocket consists of canards, driven by a separate servo that allows the rocket to actively stabilize its flight trajectory. Apogee: Rockets follow a projectile motion during flight, and no matter how fast it can go, face it, it comes to a rest at some point. This is the highest point, called apogee. To achieve, highest possible apogee, a correctly implemented trajectory, and a strongly stabilized flight are essential. At this point, we need our rockets to deploy the payload. It is necessary that the payload is deployed after ascent has ceased and preferably near the apogee. At this point, the computing system of the rocket decides (based on the sensor data) to actuate the payload release mechanism (often implemented by servos). This decision making is crucial. A wrong decision can completely sabotage the mission. Inaccurate release, say during ascent, can interfere with rocket trajectory and can misguide a rocket in habitated areas. No matter how small a rocket is, a fall from that height is extremely dangerous. Therefore, for advanced control, we implement a triple modular redundancy in the system for accurate decision making. Decent: As soon as the decent of rocket begins, it is essential to keep a track of the rocket’s position, speed and orientation in the 3-dimensional space. A rocket falling from a height of 80km can easily cross the sound barrier while decent. To stop the devastating aftermath, we equip the rocket with parachutes. And interestingly there are two of these - the drogue-chute and the main-chute. Drogue-chute is bestowed by the responsibility for initial deacceleration. This is smaller than the main-chute, as a sudden impact on the rocket body due to parachute ejection can easily create an impulse to tear the rocket apart. Further, the high altitude wind currents can absurdly drift the rocket far away from the expected landing site. This is usually done at a predetermined altitude but along with a manual override from the ground station. The main chute is deployed only after a considerable decent has been achieved. This is again governed by the rocket’s electronics control system. Landing and Recovery: Let’s assume, everything went well and we have landed safely. Know it and accept it, this is rocketry and even after all the cake and watermelon, there is a good chance that anything can go wrong. Therefore, it is supremely important to take every possible step of caution. So, we have landed but we need data and recover the rocket body. It has survived and is well enough to be reused. The onboard GPS is always connected with the transmitter that lets the ground control be aware of the rocket’s position at all times and enables them to recover it after the successful landing. The ground control is a completely electronic and computing system that always keeps a track of the rocket performance and trajectory. It is in constant contact with the rocket and often controls the functioning of the onboard systems such as flight stabilization using canards, manual parachute deployment, manual mission abort (closing engine valve to cut propellant supply), recovery etc. After all these operations done successfully, can we say, we have mentioned all the important points of a rocket electronics system? But, we forget the most important of all. One without which, none of the systems can work. And that is power. All electronics run on power and in such an agitated environment, the power consideration is highly demanded. A single glitch from the power system can cause the system to power down or worst, reset. Not to mention, the consequences. Thus, power is at the pinnacle of rocket electronics design. One must always start with formulating a power budget for the complete system. I’d say it exclusively here, “This is the first step” in rocket electronics design. A perfect rocket would also implement video recording and telemetry system (my opinion). Because after all the effort, one definitely want to see how well it performed and all the phases it went through - looking far on the straight horizon all across, to reaching the point where you see the earth getting its curve, to seeing the change in color of the sky from blue to dark horizon of space and to see the contrast of day and night in the sky as the rocket spins about its axis. It is after all these efforts and constant work and support from all the divisions of the rocket team, that the magnificent flies. Contrary to my notion, that I would not be able to summarise a rocket electronic system in a general and ‘brief’ manner, I seem to have covered a considerable ground here. But, let me just give you a warm gist that rocket electronics is vast and complicated- it brings together the power electronics team, computing team, algorithms team, data handling team, embedded systems team, robotics team and RF and Microwave team to handle all the operations of the electronic system. But if it weren’t that complicated, the old joke ‘It ain’t rocket science’ wouldn’t be so funny. If you are interested into rocketry, Introduction to Rocket Science and Engineering, Travis S. Taylor, CRC Press is an interesting read. About: I wrote this article when I was working as a part of the Delft Aerospace Rocket Engineering (DARE) Team. I was responsible for designing the electronics systems for the flagship sounding rocket of that year, Stratos-III, that was being developed to break the then European altitude record for the student-built experimental sounding rocket. A video of the launch is available here. [published originally on linkedin 🔗]]]></summary></entry><entry><title type="html">What can help when nobody is paying attention to you on your internship?</title><link href="http://localhost:4000/posts/2016/first-internship/" rel="alternate" type="text/html" title="What can help when nobody is paying attention to you on your internship?" /><published>2016-12-01T00:00:00+01:00</published><updated>2016-12-01T00:00:00+01:00</updated><id>http://localhost:4000/posts/2016/first-internship</id><content type="html" xml:base="http://localhost:4000/posts/2016/first-internship/"><![CDATA[<p>Following is my first ever internship experience at Bhabha Atomic Research Center in Mumbai, India.
<img src="/assets/images/barc-modlabs.jpg" alt="Modlab, BARC" /></p>

<p>It is a very frequent, accepted, proven and ‘true’ misconception that internships in Government institutions are worthless, as nobody has neither the time nor the patience to guide you through each and everything. And in most cases, you either end up doing nothing or if you are serious enough, you get to read - and read a lot - the reports and books on various ‘practical’ topics.</p>

<p>I had my internship starting from June 1, 2016. I am intern at Bhabha Atomic Research Center, Mumbai in the MOD LAB, Electronics Division.</p>

<p>So, I reached with all enthusiasm, but after getting all my security clearances, I was allowed inside the premises only on June 6. It was a long wait, and I did not wish to waste any time. As soon as I was assigned a mentor, and that was on 30th May, I contacted him for my project work and also asked for any prerequisite readings. I was assigned my topics, and since my ID card was due for June 3, I could not have started early. So, I had enough time to go through the topics.</p>

<p>Well in any case, that hidden fear was always there in mind because B.A.R.C. is a government organisation.I had enough time, and enough energy to go through the topics, actually subtopics, though they were fairly complicated to understand, but I somehow managed to get a clear picture of what exactly these guys were trying to accomplish!</p>

<p>Hence came Day 1. B.A.R.C. is a large place, and it took me a fairly good amount of time to figure my way out. On meeting my mentor, and he is a good man, we had an initial discussion on the kind of projects that I have done previously and what I managed to study about the assigned topics. It was a good initial interaction. He also was pleased to know that I managed to figure out the project. Of the three topics, he asked me to study all, and choose the one I would like to work on. Since time was limited (2 months), I chose a topic that was complicated enough and also would not require complicated hardware interfacing. B.A.R.C. projects are large and one cannot afford to start a new project for every internship. We are either assigned a previous pending project to further develop or, if simply one month intern, one ends up only studying the projects. But, be it any case, the former or the latter, you have to study first before you can think to contribute.</p>

<p>We start from about 10 in the morning (the timings are not strict for the trainees, but I try my best to be on time) and till 6 in the evening. The first week has ended and all I have done in this week was study! The situation had already began to develop where I could feel it happening, or as we guys say, ‘kat rha tha’. I was assigned one project and all I could do about that was to study! There was no progress ‘practically’ in 5 days after working for 8 hours everyday. All I could do was study, and I did. <strong>So, this to make a point clear here, the first important task at hand during internships is, do what you are told to do with all the effort and all the possible dedication you could manage to put together. Because, it happens only after this, that your true potential can be recognized!</strong></p>

<p>Something similar happened to me on Friday, the last day of the week. One of the scientists of the same department approached me at my desk and asked for my progress with the work. I had studied enough to make sense of the possible solutions! Just to make it clear, these topics are highly advanced, some being complicated enough that you won’t encounter them until you get to work in one of the research labs like B.A.R.C. The person was impressed with what I had to tell him. Well, to my credit, why not? I had managed to read more than 20 research papers on Ultrasonics, a PhD. thesis on the same from Illinois Institute of Technology, several topics from books on Image Processing, Statistical Pattern Recognition, Fractal and Wavelet Theory Applications and Wavelet Transforms.</p>

<p>I had a fair knowledge and methodology to make my point and suggest a possible solution! And well, to conclude, he not only appreciated but also asked me to start working with him from Monday on-wards!</p>

<p>To my mentor’s credit, I know he asked the person to come forward and take me in, to work on the project. Its a new project and only after careful observation, I was allowed to start actual work on it. B.A.R.C., or for that matter, any government organization cannot afford to start a new project for ‘Trainees’ unless they can be sure to have actual correct results at the end. The key is do the work assigned to you with an honest-to-soul hard work, diligence and patience. Leave the rest. The events would take proper turns when the time is right.</p>

<p>[published originally on <a href="https://www.linkedin.com/pulse/what-can-help-when-nobody-paying-attention-you-your-internship-yadav/">linkedin</a> 🔗]</p>]]></content><author><name>Amitabh Yadav</name></author><category term="Productivity" /><summary type="html"><![CDATA[Following is my first ever internship experience at Bhabha Atomic Research Center in Mumbai, India. It is a very frequent, accepted, proven and ‘true’ misconception that internships in Government institutions are worthless, as nobody has neither the time nor the patience to guide you through each and everything. And in most cases, you either end up doing nothing or if you are serious enough, you get to read - and read a lot - the reports and books on various ‘practical’ topics. I had my internship starting from June 1, 2016. I am intern at Bhabha Atomic Research Center, Mumbai in the MOD LAB, Electronics Division. So, I reached with all enthusiasm, but after getting all my security clearances, I was allowed inside the premises only on June 6. It was a long wait, and I did not wish to waste any time. As soon as I was assigned a mentor, and that was on 30th May, I contacted him for my project work and also asked for any prerequisite readings. I was assigned my topics, and since my ID card was due for June 3, I could not have started early. So, I had enough time to go through the topics. Well in any case, that hidden fear was always there in mind because B.A.R.C. is a government organisation.I had enough time, and enough energy to go through the topics, actually subtopics, though they were fairly complicated to understand, but I somehow managed to get a clear picture of what exactly these guys were trying to accomplish! Hence came Day 1. B.A.R.C. is a large place, and it took me a fairly good amount of time to figure my way out. On meeting my mentor, and he is a good man, we had an initial discussion on the kind of projects that I have done previously and what I managed to study about the assigned topics. It was a good initial interaction. He also was pleased to know that I managed to figure out the project. Of the three topics, he asked me to study all, and choose the one I would like to work on. Since time was limited (2 months), I chose a topic that was complicated enough and also would not require complicated hardware interfacing. B.A.R.C. projects are large and one cannot afford to start a new project for every internship. We are either assigned a previous pending project to further develop or, if simply one month intern, one ends up only studying the projects. But, be it any case, the former or the latter, you have to study first before you can think to contribute. We start from about 10 in the morning (the timings are not strict for the trainees, but I try my best to be on time) and till 6 in the evening. The first week has ended and all I have done in this week was study! The situation had already began to develop where I could feel it happening, or as we guys say, ‘kat rha tha’. I was assigned one project and all I could do about that was to study! There was no progress ‘practically’ in 5 days after working for 8 hours everyday. All I could do was study, and I did. So, this to make a point clear here, the first important task at hand during internships is, do what you are told to do with all the effort and all the possible dedication you could manage to put together. Because, it happens only after this, that your true potential can be recognized! Something similar happened to me on Friday, the last day of the week. One of the scientists of the same department approached me at my desk and asked for my progress with the work. I had studied enough to make sense of the possible solutions! Just to make it clear, these topics are highly advanced, some being complicated enough that you won’t encounter them until you get to work in one of the research labs like B.A.R.C. The person was impressed with what I had to tell him. Well, to my credit, why not? I had managed to read more than 20 research papers on Ultrasonics, a PhD. thesis on the same from Illinois Institute of Technology, several topics from books on Image Processing, Statistical Pattern Recognition, Fractal and Wavelet Theory Applications and Wavelet Transforms. I had a fair knowledge and methodology to make my point and suggest a possible solution! And well, to conclude, he not only appreciated but also asked me to start working with him from Monday on-wards! To my mentor’s credit, I know he asked the person to come forward and take me in, to work on the project. Its a new project and only after careful observation, I was allowed to start actual work on it. B.A.R.C., or for that matter, any government organization cannot afford to start a new project for ‘Trainees’ unless they can be sure to have actual correct results at the end. The key is do the work assigned to you with an honest-to-soul hard work, diligence and patience. Leave the rest. The events would take proper turns when the time is right. [published originally on linkedin 🔗]]]></summary></entry></feed>